install.packages(c("dplyr", "ggplot2", "raster", "rworldmap", "tidyr"))
coastsCoarse_df <- fortify(coastsCoarse)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
source('~/Stanford 2018-2019/SESUR 2019/R/Grid Extraction/grid_extract_for_nathaniel.r')
source('~/Stanford 2018-2019/SESUR 2019/R/Grid Extraction/grid_extract_for_nathaniel.r')
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
library(raster)
library(dplyr)
library(tidyr)
library(ggplot2)
# /----------------------------------------------------------------------------#
#/    get polygon of continent outline                                     -----
library(rworldmap)
data(coastsCoarse)
coastsCoarse_df <- fortify(coastsCoarse)
coastsCoarse_df <- arrange(coastsCoarse_df, id)
flux <- brick('../output/results/grid/upch4_med_nmolm2sec.nc')# , varname="upch4")
# replace negative (sink) values
flux[flux < 0] = NA
# Get date list
parseddates <- readRDS('../output/results/parsed_dates.rds')
bams_towers <- read.csv("../data/towers/BAMS_site_coordinates.csv")
bams_towers <- read.csv("../Towers/BAMS_site_coordinates.csv")
bams_towers <- read.csv("../SESUR 2019/R/Towers/BAMS_site_coordinates.csv")
bams_towers <- read.csv("C:\Users\gohna\Documents\Stanford 2018-2019\SESUR 2019\R\Grid Extraction\Towers\BAMS_site_coordinates.csv")
bams_towers <- read.csv("C:\Users\gohna\Documents\Stanford 2018-2019\SESUR 2019\R\Grid Extraction\Towers\BAMS_site_coordinates.csv")
bams_towers <- read.csv("\Stanford 2018-2019\SESUR 2019\R\Grid Extraction\Towers\BAMS_site_coordinates.csv")
bams_towers <- read.csv("..\Stanford 2018-2019\SESUR 2019\R\Grid Extraction\Towers\BAMS_site_coordinates.csv")
bams_towers <- read.csv("..\SESUR 2019\R\Grid Extraction\Towers\BAMS_site_coordinates.csv")
bams_towers <- read.csv("..\Towers\BAMS_site_coordinates.csv")
bams_towers <- read.csv("../\Towers\BAMS_site_coordinates.csv")
bams_towers <- read.csv("../Towers\BAMS_site_coordinates.csv")
bams_towers <- read.csv("../Towers/BAMS_site_coordinates.csv")
bams_towers <- read.csv("..Grid Extraction/Towers/BAMS_site_coordinates.csv")
bams_towers <- read.csv("../Grid Extraction/Towers/BAMS_site_coordinates.csv")
data(coastsCoarse)
coastsCoarse_df <- fortify(coastsCoarse)
coastsCoarse_df <- arrange(coastsCoarse_df, id)
View(coastsCoarse)
View(coastsCoarse)
View(coastsCoarse_df)
tidyr??
bams_towers <- read.csv("../Grid Extraction/Towers/BAMS_site_coordinates.csv")
bams_towers <- read.csv("../Grid Extraction/Towers/BAMS_site_coordinates.csv")
View(bams_towers)
View(bams_towers)
bams_towers <- read.csv("../Grid Extraction/Towers/BAMS_site_coordinates.csv")
# reformat rasters  for graph in ggplot
flux_df <- as(flux[[1]], "SpatialPixelsDataFrame")
flux <- brick('../output/results/grid/upch4_med_nmolm2sec.nc')# , varname="upch4")
# replace negative (sink) values
flux[flux < 0] = NA
# Get date list (RDS is a R data structure).
# Change this to another format; because RDS is bad.
parseddates <- readRDS('../output/results/parsed_dates.rds')
bams_towers <- read.csv("../Grid Extraction/Towers/BAMS_site_coordinates.csv")
flux <- brick('../output/results/grid/upch4_med_nmolm2sec.nc')
